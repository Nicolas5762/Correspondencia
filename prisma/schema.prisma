// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  email            String    @unique
  password         String?
  name             String
  apellido         String
  numeroTelefono   String?
  isAdmin          Boolean?  @default(false)
  archivo          String?
  role             Role      @default(USER)
  emailVerified    DateTime? @map("email_verified")
  passwordVerified DateTime? @map("password_verified")
  image            String?
  accounts         Account[]

  @@map("users")
}

enum Role {
  ADMIN
  USER
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  User              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
  @@map("verification_tokens")
}

model PasswordResetToken {
  id         String   @id @default(cuid())
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  userId     String
  identifier String

  @@index([userId, token])
  @@map("password_tokens")
}
